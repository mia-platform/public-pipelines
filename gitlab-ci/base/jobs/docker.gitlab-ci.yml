variables:
  REGISTRY: $CI_REGISTRY
  IMAGE_NAME: ""
  IMAGE_PLATFORMS: linux/amd64,linux/arm64
  REGISTRY_USER: $CI_REGISTRY_USER
  REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD
  DOCKER_IMAGE_TAG: latest

.container-base:
  script:
  - |
    if [[ "${REGISTRY}" != "${CI_REGISTRY}" ]]; then
      temp_registry_image="${REGISTRY}/${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    else
      temp_registry_image="${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
    fi
  - export REGISTRY_IMAGE="${temp_registry_image}"

.docker-base:
  image:
    name: ${CONTAINER_PATH}/docker-pipeline:${DOCKER_IMAGE_TAG}

  services:
  - name: docker:24-dind

  variables:
    DOCKERBUILD_DIR: $CI_PROJECT_DIR
    DOCKERFILE_PATH: $CI_PROJECT_DIR/Dockerfile

  dependencies: []

docker-build:
  extends: .docker-base

  script:
  - !reference [.container-base, script]
  - docker info
  - docker buildx version
  - oras version
  - source /usr/local/lib/docker_helpers.sh
  - docker_login "${REGISTRY_USER}" "${REGISTRY_PASSWORD}" "${REGISTRY}"
  - setup_docker_context
  - docker buildx build "${DOCKERBUILD_DIR}" --file "${DOCKERFILE_PATH}" --push --platform="${IMAGE_PLATFORMS}" --tag "${REGISTRY_IMAGE}" --provenance=false
  - cleanup_docker_context

  rules:
  - if: $CI_COMMIT_BRANCH
    exists:
    - "**/Dockerfile*"
  - if: $CI_COMMIT_TAG
    exists:
    - "**/Dockerfile*"

docker-push-branch:
  extends: .docker-base
  stage: deploy

  script:
  - !reference [.container-base, script]
  - echo "${REGISTRY_PASSWORD}" | oras login --username "${REGISTRY_USER}" --password-stdin "${REGISTRY}"
  - |
    if [[ "${CI_COMMIT_BRANCH}" == "${CI_DEFAULT_BRANCH}" ]]; then
      tag="latest"
      echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
    else
       tag="${CI_COMMIT_REF_SLUG}"
       echo "Running on branch '$CI_COMMIT_BRANCH': tag = ${tag}"
    fi

  - oras manifest fetch --pretty "${REGISTRY_IMAGE}" --output manifest.json
  - oras manifest delete --force "${REGISTRY_IMAGE}"
  - |
    if [[ "${REGISTRY}" != "${CI_REGISTRY}" ]]; then
      REGISTRY_IMAGE="${REGISTRY}/${IMAGE_NAME}:${tag}"
    else
      REGISTRY_IMAGE="${CI_REGISTRY_IMAGE}:${tag}"
    fi
  - oras manifest push --verbose "${REGISTRY_IMAGE}" manifest.json

  rules:
  - if: $CI_COMMIT_BRANCH
    exists:
    - "**/Dockerfile*"

docker-push-tag:
  extends: docker-push-branch

  script:
  - !reference [docker-push-branch, script]
  - syft version
  - cosign version
  - syft packages "${REGISTRY_IMAGE}" -o spdx-json > docker-image-sbom.spdx.json
  - cosign attach sbom --sbom docker-image-sbom.spdx.json "${REGISTRY_IMAGE}"
  - image_digest=$(oras manifest fetch --descriptor "${REGISTRY_IMAGE}" --pretty | jq -r '.digest')
  - |
    if [[ -n "$COSIGN_PRIVATE_KEY" ]]; then
      cosign sign --key "$COSIGN_PRIVATE_KEY" --recursive --yes "${REGISTRY_IMAGE}"@"${image_digest}"
    elif [[ -n "$SIGSTORE_ID_TOKEN" ]]; then
      cosign sign --recursive --yes "${REGISTRY_IMAGE}"@"${image_digest}"
    else
      echo "no key found: skipping image signing"
    fi

  rules:
  - if: $CI_COMMIT_TAG
    exists:
    - "**/Dockerfile*"

  artifacts:
    paths:
    - docker-image-sbom.spdx.json
