variables:
  SYSDIG_IMAGE_TAG: 1

sysdig:
  stage: test
  image:
    name: ${CONTAINER_PATH}/sysdig-pipeline:${SYSDIG_IMAGE_TAG}

  dependencies: []

  variables:
    SYSDIG_SECURE_TOKEN: "" # the sysdig secure token of your instance
    SYSDIG_SECURE_BACKEND_ENDPOINT: "" # the sysdig secure backend endpoint for your instance
    GIT_STRATEGY: none # if you need files in the repository chagne the strategy to fetch

  script:
  - echo "${CI_JOB_NAME} is used for configuration only, and its script should not be executed"
  - exit 1

  rules:
  - when: never

  artifacts:
    paths:
    - container-scanning-report.json
    when: always

.sysdig-scan:
  extends: sysdig

  script:
  - !reference [.container-base, script]
  - if [ -z "${SYSDIG_SECURE_BACKEND_ENDPOINT}" ]; then echo "SYSDIG_SECURE_BACKEND_ENDPOINT is not set."; exit 1; fi;
  - sysdig-cli-scanner --version
  - REGISTRY_USER="${CI_APPLICATION_REPOSITORY_USER}" REGISTRY_PASSWORD="${CI_APPLICATION_REPOSITORY_PASSWORD}" sysdig-cli-scanner --console-log --apiurl "${SYSDIG_SECURE_BACKEND_ENDPOINT}" "${CI_APPLICATION_REPOSITORY}:${push_tag}" --output=json-file="${CI_PROJECT_DIR}/container-scanning-report.json" || exit_code=$?
  - if [ ${exit_code:=0} -ne 1 ]; then exit ${exit_code}; fi;
  - echo "${CI_APPLICATION_REPOSITORY_PASSWORD}" | oras login --username "${CI_APPLICATION_REPOSITORY_USER}" --password-stdin "${CI_APPLICATION_REPOSITORY_REGISTRY}"
  - |
      oras manifest fetch "${CI_APPLICATION_REPOSITORY}:${push_tag}" | jq -r -c '.manifests[].digest' | \
      while read digest; do
        full_image_name="${CI_APPLICATION_REPOSITORY}:${push_tag}@${digest}"
        oras manifest delete --force "${full_image_name}"
      done
  - oras manifest delete --force "${CI_APPLICATION_REPOSITORY}:${push_tag}"
  - exit 1

sysdig-container_scanning:
  extends: .sysdig-scan

  variables:
    SECURE_API_TOKEN: "${SYSDIG_SECURE_TOKEN}"

  rules:
  - if: $CONTAINER_SCANNING_DISABLED == 'true' || $CONTAINER_SCANNING_DISABLED == '1'
    when: never
  - if: $CI_COMMIT_BRANCH && $SYSDIG_SECURE_TOKEN

sysdig-legacy-container_scanning:
  extends: .sysdig-scan

  script:
  - echo "This job is deprecated and will be removed in the future."
  - echo "For custom configuration, please use the 'sysdig' job."
  - exit 1

  rules:
  - when: never
